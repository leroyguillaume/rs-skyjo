---
name: cache

on:
  pull_request:
    paths: [.github/workflows/cache.yml]
  push:
    branches: [main]

concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref_name }}

jobs:
  cargo:
    strategy:
      matrix:
        target:
          - name: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - name: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - name: x86_64-apple-darwin
            os: macos-latest
    name: cargo (${{ matrix.target.name }})
    runs-on: ${{ matrix.target.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Rust toolchain
        id: rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: ${{ matrix.target.name }}

      - name: Restore cargo cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo
            target
          key: cargo-${{ steps.rust.outputs.rustc_hash }}-${{ matrix.target.name }}-${{ hashFiles('Cargo.lock') }}

      - name: Run cross build (debug)
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --target ${{ matrix.target.name }}

      - name: Run cross build (release)
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --target ${{ matrix.target.name }} --release

      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: rs-skyjo-cli-${{ matrix.target.name }}-${{ github.sha }}
          path: target/${{ matrix.target.name }}/release/rs-skyjo-cli
          if-no-files-found: error
          retention-days: 1

  cargo-clippy:
    name: cargo-clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Rust toolchain
        id: rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Restore cargo-clippy cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo
            target
          key: cargo-clippy-${{ steps.rust.outputs.rustc_hash }}-x86_64-unknown-linux-gnu-${{ hashFiles('Cargo.lock') }}

      - name: Run cargo clippy
        run: cargo clippy --tests -- -D warnings
