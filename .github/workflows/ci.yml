---
name: ci

on:
  pull_request:
    paths:
      - .github/workflows/ci.yml
      - "Cargo.*"
      - "**.rs"

concurrency:
  cancel-in-progress: true
  group: ${{ github.head_ref }}-${{ github.workflow }}

jobs:
  build:
    strategy:
      matrix:
        target:
          - name: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - name: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - name: x86_64-apple-darwin
            os: macos-latest
    name: build (${{ matrix.target.name }})
    runs-on: ${{ matrix.target.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Rust toolchain
        id: rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: ${{ matrix.target.name }}

      - name: Restore cargo cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo
            target
          key: cargo-${{ steps.rust.outputs.rustc_hash }}-${{ matrix.target.name }}-${{ hashFiles('Cargo.lock') }}

      - name: Run cross build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --target ${{ matrix.target.name }}

  lint:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Rust toolchain
        id: rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: ${{ matrix.target.name }}

      - name: Restore cargo-clippy cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo
            target
          key: cargo-clippy-${{ steps.rust.outputs.rustc_hash }}-x86_64-unknown-linux-gnu-${{ hashFiles('Cargo.lock') }}

      - name: Run cargo fmt
        run: cargo fmt --check

      - name: Run cargo clippy
        run: cargo clippy --tests -- -D warnings

  test:
    needs: [build]
    strategy:
      matrix:
        target:
          - name: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - name: x86_64-apple-darwin
            os: macos-latest
    name: test (${{ matrix.target.name }})
    runs-on: ${{ matrix.target.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Rust toolchain
        id: rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: ${{ matrix.target.name }}

      - name: Restore cargo cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo
            target
          key: cargo-${{ steps.rust.outputs.rustc_hash }}-${{ matrix.target.name }}-${{ hashFiles('Cargo.lock') }}

      - name: Configure git user/email
        run: |
          git config --global user.name "$(git log -n 1 --pretty=format:%an)"
          git config --global user.email "$(git log -n 1 --pretty=format:%ae)"

      - name: Run cross test
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: test
          args: --target ${{ matrix.target.name }}
